{"version":3,"file":"Totp-BlKwijcE.js","sources":["../../src/keycloak-theme/account/pages/Totp.tsx"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { MessageKey } from \"keycloakify/account/i18n/i18n\";\n\nexport default function Totp(props: PageProps<Extract<KcContext, { pageId: \"totp.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { totp, mode, url, messagesPerField, stateChecker } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const algToKeyUriAlg: Record<(typeof kcContext)[\"totp\"][\"policy\"][\"algorithm\"], string> = {\n        \"HmacSHA1\": \"SHA1\",\n        \"HmacSHA256\": \"SHA256\",\n        \"HmacSHA512\": \"SHA512\"\n    };\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"totp\">\n            <>\n                <div className=\"row\">\n                    <div className=\"col-md-10\">\n                        <h2>{msg(\"authenticatorTitle\")}</h2>\n                    </div>\n                    {totp.otpCredentials.length === 0 && (\n                        <div className=\"subtitle col-md-2\">\n                            <span className=\"required\">*</span>\n                            {msg(\"requiredFields\")}\n                        </div>\n                    )}\n                </div>\n                {totp.enabled && (\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            {totp.otpCredentials.length > 1 ? (\n                                <tr>\n                                    <th colSpan={4}>{msg(\"configureAuthenticators\")}</th>\n                                </tr>\n                            ) : (\n                                <tr>\n                                    <th colSpan={3}>{msg(\"configureAuthenticators\")}</th>\n                                </tr>\n                            )}\n                        </thead>\n                        <tbody>\n                            {totp.otpCredentials.map((credential, index) => (\n                                <tr key={index}>\n                                    <td className=\"provider\">{msg(\"mobile\")}</td>\n                                    {totp.otpCredentials.length > 1 && <td className=\"provider\">{credential.id}</td>}\n                                    <td className=\"provider\">{credential.userLabel || \"\"}</td>\n                                    <td className=\"action\">\n                                        <form action={url.totpUrl} method=\"post\" className=\"form-inline\">\n                                            <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n                                            <input type=\"hidden\" id=\"submitAction\" name=\"submitAction\" value=\"Delete\" />\n                                            <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={credential.id} />\n                                            <button id={`remove-mobile-${index}`} className=\"btn btn-default\">\n                                                <i className=\"pficon pficon-delete\"></i>\n                                            </button>\n                                        </form>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n                {!totp.enabled && (\n                    <div>\n                        <hr />\n                        <ol id=\"kc-totp-settings\">\n                            <li>\n                                <p>{msg(\"totpStep1\")}</p>\n\n                                <ul id=\"kc-totp-supported-apps\">\n                                    {totp.supportedApplications.map(app => (\n                                        <li key={app}>{msg(app as MessageKey)}</li>\n                                    ))}\n                                </ul>\n                            </li>\n\n                            {mode && mode == \"manual\" ? (\n                                <>\n                                    <li>\n                                        <p>{msg(\"totpManualStep2\")}</p>\n                                        <p>\n                                            <span id=\"kc-totp-secret-key\">{totp.totpSecretEncoded}</span>\n                                        </p>\n                                        <p>\n                                            <a href={totp.qrUrl} id=\"mode-barcode\">\n                                                {msg(\"totpScanBarcode\")}\n                                            </a>\n                                        </p>\n                                    </li>\n                                    <li>\n                                        <p>{msg(\"totpManualStep3\")}</p>\n                                        <p>\n                                            <ul>\n                                                <li id=\"kc-totp-type\">\n                                                    {msg(\"totpType\")}: {msg(`totp.${totp.policy.type}`)}\n                                                </li>\n                                                <li id=\"kc-totp-algorithm\">\n                                                    {msg(\"totpAlgorithm\")}: {algToKeyUriAlg?.[totp.policy.algorithm] ?? totp.policy.algorithm}\n                                                </li>\n                                                <li id=\"kc-totp-digits\">\n                                                    {msg(\"totpDigits\")}: {totp.policy.digits}\n                                                </li>\n                                                {totp.policy.type === \"totp\" ? (\n                                                    <li id=\"kc-totp-period\">\n                                                        {msg(\"totpInterval\")}: {totp.policy.period}\n                                                    </li>\n                                                ) : (\n                                                    <li id=\"kc-totp-counter\">\n                                                        {msg(\"totpCounter\")}: {totp.policy.initialCounter}\n                                                    </li>\n                                                )}\n                                            </ul>\n                                        </p>\n                                    </li>\n                                </>\n                            ) : (\n                                <li>\n                                    <p>{msg(\"totpStep2\")}</p>\n                                    <p>\n                                        <img\n                                            id=\"kc-totp-secret-qr-code\"\n                                            src={`data:image/png;base64, ${totp.totpSecretQrCode}`}\n                                            alt=\"Figure: Barcode\"\n                                        />\n                                    </p>\n                                    <p>\n                                        <a href={totp.manualUrl} id=\"mode-manual\">\n                                            {msg(\"totpUnableToScan\")}\n                                        </a>\n                                    </p>\n                                </li>\n                            )}\n                            <li>\n                                <p>{msg(\"totpStep3\")}</p>\n                                <p>{msg(\"totpStep3DeviceName\")}</p>\n                            </li>\n                        </ol>\n                        <hr />\n                        <form action={url.totpUrl} className={getClassName(\"kcFormClass\")} id=\"kc-totp-settings-form\" method=\"post\">\n                            <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                <div className=\"col-sm-2 col-md-2\">\n                                    <label htmlFor=\"totp\" className=\"control-label\">\n                                        {msg(\"authenticatorCode\")}\n                                    </label>\n                                    <span className=\"required\">*</span>\n                                </div>\n                                <div className=\"col-sm-10 col-md-10\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"totp\"\n                                        name=\"totp\"\n                                        autoComplete=\"off\"\n                                        className={getClassName(\"kcInputClass\")}\n                                        aria-invalid={messagesPerField.existsError(\"totp\")}\n                                    />\n\n                                    {messagesPerField.existsError(\"totp\") && (\n                                        <span id=\"input-error-otp-code\" className={getClassName(\"kcInputErrorMessageClass\")} aria-live=\"polite\">\n                                            {messagesPerField.get(\"totp\")}\n                                        </span>\n                                    )}\n                                </div>\n                                <input type=\"hidden\" id=\"totpSecret\" name=\"totpSecret\" value={totp.totpSecret} />\n                                {mode && <input type=\"hidden\" id=\"mode\" value={mode} />}\n                            </div>\n\n                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                <div className=\"col-sm-2 col-md-2\">\n                                    <label htmlFor=\"userLabel\" className={getClassName(\"kcLabelClass\")}>\n                                        {msg(\"totpDeviceName\")}\n                                    </label>\n                                    {totp.otpCredentials.length >= 1 && <span className=\"required\">*</span>}\n                                </div>\n                                <div className=\"col-sm-10 col-md-10\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"userLabel\"\n                                        name=\"userLabel\"\n                                        autoComplete=\"off\"\n                                        className={getClassName(\"kcInputClass\")}\n                                        aria-invalid={messagesPerField.existsError(\"userLabel\")}\n                                    />\n                                    {messagesPerField.existsError(\"userLabel\") && (\n                                        <span id=\"input-error-otp-label\" className={getClassName(\"kcInputErrorMessageClass\")} aria-live=\"polite\">\n                                            {messagesPerField.get(\"userLabel\")}\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div id=\"kc-form-buttons\" className={clsx(getClassName(\"kcFormGroupClass\"), \"text-right\")}>\n                                <div className={getClassName(\"kcInputWrapperClass\")}>\n                                    <input\n                                        type=\"submit\"\n                                        className={clsx(\n                                            getClassName(\"kcButtonClass\"),\n                                            getClassName(\"kcButtonPrimaryClass\"),\n                                            getClassName(\"kcButtonLargeClass\")\n                                        )}\n                                        id=\"saveTOTPBtn\"\n                                        value={msgStr(\"doSave\")}\n                                    />\n                                    <button\n                                        type=\"submit\"\n                                        className={clsx(\n                                            getClassName(\"kcButtonClass\"),\n                                            getClassName(\"kcButtonDefaultClass\"),\n                                            getClassName(\"kcButtonLargeClass\"),\n                                            getClassName(\"kcButtonLargeClass\")\n                                        )}\n                                        id=\"cancelTOTPBtn\"\n                                        name=\"submitAction\"\n                                        value=\"Cancel\"\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                )}\n            </>\n        </Template>\n    );\n}\n"],"names":["Totp","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","totp","mode","url","messagesPerField","stateChecker","msg","msgStr","algToKeyUriAlg","jsx","jsxs","Fragment","credential","index","app","clsx"],"mappings":"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"}