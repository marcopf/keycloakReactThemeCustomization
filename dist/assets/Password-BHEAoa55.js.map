{"version":3,"file":"Password-BHEAoa55.js","sources":["../../src/keycloak-theme/account/pages/OtpSection.tsx","../../src/keycloak-theme/account/pages/Password.tsx"],"sourcesContent":["import { AuthContext, AuthProvider, IAuthContext, TAuthConfig, TRefreshTokenExpiredEvent } from \"react-oauth2-code-pkce\"\nimport { useContext, useEffect, useState } from 'react'\n\n//----\n//list of all string and endpoint needed to perform the pkce call and retrieve the attribute info\n//----\n\nconst CLIENT_ID =               'account-console'\nconst AUTH_ENDPOINT =           'http://localhost:8080/realms/master/protocol/openid-connect/auth';\nconst TOKEN_ENDPOINT =          'http://localhost:8080/realms/master/protocol/openid-connect/token';\nconst REDIRECT_URI =            'http://localhost:8080/realms/master/account/';\nconst SCOPE =                   'openid'\nconst INFO_ENDPOINT =           'http://localhost:8080/realms/master/account/credentials/'\nconst NEW_OTP_CONFIGURATION =   'http://localhost:8080/realms/master/protocol/openid-connect/auth?client_id=account-console&redirect_uri=http://localhost:8080/realms/master/account&state=d7d1a0a3-fb42-4a4c-8d5d-9311c20a6388&response_mode=query&code_challenge=XSRahxpQ59S7SzBGlRXc41wXKTT2_e-EJ_GPcGMCi2E&http://localhost:8080/realms/master/protocol/openid-connect/auth?client_id=account-console&response_type=code&scope=openid&nonce=207f4110-eb53-431c-ad70-497f50800d2c&kc_action=CONFIGURE_TOTP&code_challenge_method=S256'\n\n//----\n\nconst authConfig: TAuthConfig = {\n    clientId: CLIENT_ID,\n    authorizationEndpoint: AUTH_ENDPOINT,\n    tokenEndpoint: TOKEN_ENDPOINT,\n    redirectUri: REDIRECT_URI,\n    scope: SCOPE,\n    onRefreshTokenExpire: (event: TRefreshTokenExpiredEvent) => window.confirm('Session expired. Refresh page to continue using the site?') && event.login(),\n  }\n\n//funzione asincrona che ottiene le informazioni relative alle configurazioni otp attive\n//  token: rappresenta l'access_token che verra' poi utilizzato nell'authorization header della richiesta\nasync function getInfo(token: string) {\n\n    // effettuo la richesta tramite fetch prestando attenzione all'asincronicita'\n    const res = await fetch(INFO_ENDPOINT, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token\n        }\n    })\n \n    //parso la risposta come json\n    let resJson = {};\n    try {\n        if (res.ok)\n            resJson = await res.json();\n    } catch (e) {\n        console.log(e)\n    }\n\n    //altrimenti torno un'oggetto vuoto \"{}\"\n    return resJson;\n}\n\n// Aggiunge lo zero iniziale se il numero e' minore di 10\nfunction addZero(num: number) {\n    return (num < 10 ? '0' : '') + num;\n}\n\nfunction getFormattedDate(milliseconds: number){\n    // Crea una data a partire dai millisecondi dal 1970\n    var date = new Date(milliseconds);\n\n    // estraggo ogni valore dalla data appena creata\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var seconds = date.getSeconds();\n    \n    // Formatto la data per una  migliore visualizzazione\n    return (year + \"-\" + addZero(month) + \"-\" + addZero(day) + \" \" + addZero(hours) + \":\" + addZero(minutes) + \":\" + addZero(seconds));\n}\n\nfunction UserInfo(): JSX.Element {\n    const {token} = useContext<IAuthContext>(AuthContext);\n    const [totpList, setList] = useState<any[]>([]);\n\n    async function deleteTotp(e: any){\n        console.log(token)\n        if (!confirm(\"vuoi eleminare?\"))\n            return;\n        const res = await fetch(INFO_ENDPOINT + e.target.getAttribute('id'), {\n            method: 'DELETE',\n            headers: {\n                \"Authorization\": \"Bearer \" + token,\n                'Content-Type': 'application/json'\n            }\n        })\n        if (res.ok){\n            window.location.reload();\n        }\n        else\n            alert('Errore!');\n    }\n    \n    //permette di gestire in modo asincrono la creazione del form dinamico che e' basato sulla variabile USERDATA\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response: any = await getInfo(token);\n                const userCredentialMetadata = response[1].userCredentialMetadatas;\n                if (userCredentialMetadata && response[1]) {\n                    setList(userCredentialMetadata);\n                }\n            } catch (error) {\n                console.error('Error fetching user info:', error);\n            }\n        };\n\n        fetchData();\n    }, [token]);\n\n    return <>\n\n        {/* Definisco l'header della sezione OTP */}\n        <div className=\"row my-5\">\n            <div className=\"col-8\">\n                <h1>Otp Section</h1>\n            </div>\n            <div className=\"col-4 d-flex justify-content-end align-items-center\">\n\n                {/* Preparo il link che portera' alla pagina di per aggiungere una nuova configurazione OTP */}\n                <a href={NEW_OTP_CONFIGURATION}>Configure new Otp</a>\n            </div>\n        </div>\n\n        {/* Controllo la lungezza dell'array contentente le informazioni relative\n        alle configurazioni OTP se e' 0 mostro un messaggio di avviso */}\n        {totpList.length == 0 ?\n            <div className=\"row justify-content-center\">\n                <div className=\"col-6 d-flex justify-content-center\">\n                    <span className=\"text-danger\">No Configuration Found!</span>\n                </div>\n            </div> : <></>}\n\n        {/* Ciclo l'array contentente tutte le configurazioni attive \"totpList\"\n        per creare in maniera dinamica le righe che permettono la gestione della configurazione */}\n        {totpList.map(el=>{\n            return <>\n\n                <div className=\"mt-4 p-3 row align-items-center\">\n                    <div className=\"col-4 d-flex flex-column\"><strong className=\"me-3\">Otp Label: </strong>{el.credential.userLabel}</div>\n                    <div className=\"col-4 d-flex flex-column\"><strong className=\"me-3\">Creation Date: </strong>{getFormattedDate(el.credential.createdDate)}</div>\n\n                    {/* Creo un pulsante atto alla rimozione della configurazione impostando l'id del bottonattributie uguale\n                    all'id della configurazione, cosi che possa poi fare riferimento a quest'ultimo per poter poi eliminare la configurazione OTP */}\n                    <div className=\"col-4 d-flex justify-content-end\"><button id={el.credential.id} className=\"btn btn-danger\" onClick={deleteTotp}>Remove</button></div>\n                </div>\n            </>\n        })}\n\n    </>\n  }\n\n  //definisco l'oggetto finale che si espandera' poi in una lista di configurazioni OTP dinamica, dipendenti dalle informazioni ottenute dal server di autenticazione\n  export default function OtpSection(): JSX.Element{\n    return <>\n        <AuthProvider authConfig={authConfig}>\n            <UserInfo ></UserInfo>\n        </AuthProvider>\n    </>\n  }","import type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport OtpSection from './OtpSection'\n\nexport default function LogoutConfirm(fprops: any) {\n    let props = fprops as PageProps<Extract<KcContext, { pageId: \"password.ftl\" }>, I18n>\n    console.log(fprops, props)\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n\n    const { url, password, account, stateChecker } = kcContext;\n\n    const { msg } = i18n;\n    \n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"password\">            \n            <div className=\"row d-flex align-items-center\">\n                <div className=\"col-md-8\">\n                    <h2>{msg(\"changePasswordHtmlTitle\")}</h2>\n                </div>\n                <div className=\"col-md-4 subtitle\">\n                    <span className=\"subtitle\">{msg(\"allFieldsRequired\")}</span>\n                </div>\n            </div>\n            <form action={url.passwordUrl} className=\"form-horizontal mt-3\" method=\"post\">\n                <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={account.username ?? \"\"}\n                    autoComplete=\"username\"\n                    readOnly\n                    style={{ \"display\": \"none\" }}\n                />\n                {password.passwordSet && (\n                    <div className=\"form-group\">\n                        <label className=\"active control-label\" htmlFor=\"password\">{msg(\"password\")}</label>\n                        <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" autoComplete=\"current-password\" />\n                    </div>\n                )}\n                <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n                <div className=\"form-group\">\n                    <label className=\"active control-label\" htmlFor=\"password-new\">{msg(\"passwordNew\")}</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password-new\" name=\"password-new\" autoComplete=\"new-password\" aria-describedby=\"formGroupExampleInputWithHelpDescription\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"active control-label\" htmlFor=\"password-confirm\">{msg(\"passwordConfirm\")}</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password-confirm\" name=\"password-confirm\" autoComplete=\"new-password\" />\n                </div>\n                <div className=\"form-group\">\n                    <div id=\"kc-form-buttons\" className=\"submit\">\n                        <div className=\"d-flex justify-content-end\">\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary\"\n                                name=\"submitAction\"\n                                value=\"Save\"\n                            >\n                                {msg(\"doSave\")}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            <OtpSection></OtpSection>\n        </Template>\n    );\n}\n"],"names":["CLIENT_ID","AUTH_ENDPOINT","TOKEN_ENDPOINT","REDIRECT_URI","SCOPE","INFO_ENDPOINT","NEW_OTP_CONFIGURATION","authConfig","event","getInfo","token","res","resJson","e","addZero","num","getFormattedDate","milliseconds","date","year","month","day","hours","minutes","seconds","UserInfo","useContext","AuthContext","totpList","setList","useState","deleteTotp","useEffect","response","userCredentialMetadata","error","jsxs","Fragment","jsx","el","OtpSection","AuthProvider","LogoutConfirm","fprops","props","kcContext","i18n","doUseDefaultCss","Template","classes","url","password","account","stateChecker","msg"],"mappings":"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"}