{"version":3,"file":"Account-Bys_thBf.js","sources":["../../src/keycloak-theme/account/pages/DynamicAttribute.tsx","../../src/keycloak-theme/account/pages/Account.tsx"],"sourcesContent":["import { AuthContext, AuthProvider, IAuthContext, TAuthConfig, TRefreshTokenExpiredEvent } from \"react-oauth2-code-pkce\"\nimport { useContext, useEffect, useState } from 'react'\n\nfunction UserInfo(props: any): JSX.Element {\n    console.log(props)\n    //funzione asincrona che ottiene le informazioni relative agli attributi registrati, di default e custom\n    //  token: rappresenta l'access_token che verra' poi utilizzato nell'authorization header della richiesta\n    async function getInfo(token: string) {\n    \n        // effettuo la richesta tramite fetch prestando attenzione all'asincronicita'\n        const res = await fetch(props.props.kcContext.properties.USER_ATTRIBUTE_ENDPOINT, {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \" + token\n            }\n        })\n     \n        //parso la risposta come json\n        let resJson = {};\n        try {\n            if (res.ok)\n                resJson = await res.json();\n        } catch (e) {\n            console.log(e)\n        }\n    \n        //altrimenti torno un'oggetto vuoto \"{}\"\n        return resJson;\n    }\n\n    const {token} = useContext<IAuthContext>(AuthContext);\n    const [userData, setUserData] = useState<any[]>([]);\n    const [userDataValues, setUserDataValue] = useState<any[]>([]);\n\n    //permette di gestire in modo asincrono la creazione del form dinamico che e' basato sulla variabile USERDATA\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response: any = await getInfo(token);\n                const userProfileMetadata = response.userProfileMetadata;\n                if (userProfileMetadata && userProfileMetadata.attributes) {\n                    setUserData(userProfileMetadata.attributes);\n                }\n                if (response && response.attributes){\n                    setUserDataValue(response.attributes)\n                }\n            } catch (error) {\n                console.error('Error fetching user info:', error);\n            }\n        };\n\n        fetchData();\n    }, [token]);\n\n    return <>\n\n        {/*\n            ciclo l'array userData che contiene la lista di attributi da renderizzare\n        */}\n        {userData.map((element: any, index: number) => {\n\n            // renderizzo solo gli attributi diversi da quelli di default\n            return element.name == 'username' || element.name == 'firstName' || element.name == 'lastName' || element.name == 'email'? <></> :\n                <div key={index} className=\"form-group\">\n\n                    {/*\n                        creo il label dell'attributo partendo dalle informazioni ricavate dall'array iniziale\n                    */}\n                    <label className=\"active control-label\" htmlFor={element.name}>\n                        {element.name}{element.required && <span className=\"required\"> *</span>}\n                    </label>\n\n                    {/*\n                        definisco le proprieta' dell'input relativo all'attributo sempre partendo dall'array inizale\n                        integrando anche userDataValues che contiente informazioni tipo valore iniziale e validators\n                    */}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id={element.name}\n                        name={element.name}\n                        required={element.required}\n                        disabled={element.readOnly}\n                        defaultValue={userDataValues[element.name] ?? \"\"}\n                    />\n                </div>\n        })}\n    </>\n  }\n\n  interface WellKnow {\n    [key: string]: string\n  }\n\n  //definisco l'oggetto finale che si espandera' poi in una lista di attributi dinamici, dipendenti dalle informazioni ottenute dal server di autenticazione\n  export default function BuildForm(props: any): JSX.Element{\n    const [wellKnown, setWellKnown] = useState({} as WellKnow);\n    const [contentLoaded, setContentLoaded] = useState(false);\n\n    //ricava i dati dall'endpoint WELL KNOWN di keycloak\n    useEffect(()=>{\n        const fetchData = async () => {\n            const res = await fetch(props.props.kcContext.properties.WELL_KNOWN_API);\n\n            if (res.ok){\n                let resJson = await res.json();\n                setWellKnown(resJson as WellKnow);\n                setContentLoaded(true);\n            }\n        }\n\n        fetchData();\n    }, []);\n\n    //aspetta che gli endpoint siano stati ricavati, una volta ottenuti vie effetuata la chimata OAUTH2\n    if (contentLoaded){\n        \n        const authConfig: TAuthConfig = {\n            clientId: 'account-console',\n            authorizationEndpoint: wellKnown.authorization_endpoint,\n            tokenEndpoint: wellKnown.token_endpoint,\n            redirectUri: wellKnown.issuer + '/account',\n            scope: 'openid',\n            onRefreshTokenExpire: (event: TRefreshTokenExpiredEvent) => window.confirm('Session expired. Refresh page to continue using the site?') && event.login(),\n        }\n\n        return <>\n            <AuthProvider authConfig={authConfig}>\n                <UserInfo props={props.props}></UserInfo>\n            </AuthProvider>\n        </>\n    }\n\n    //se i dati richiesti tramite fetch non sono ancora disponibili o sono presenti errori ritorno un'oggetto vuoto\n    return (\n        <></>\n    )\n  }","import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport BuildForm from \"./DynamicAttribute\";\n\nexport default function Account(props: PageProps<Extract<KcContext, { pageId: \"account.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        \"classes\": {\n            ...classes,\n            \"kcBodyClass\": clsx(classes?.kcBodyClass, \"user\")\n        }\n    });\n\n    const { url, realm, messagesPerField, stateChecker, account, referrer } = kcContext;\n\n    const { msg } = i18n;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"account\">\n            <div className=\"row d-flex align-items-center\">\n                <div className=\"col-md-8\">\n                    <h2>{msg(\"editAccountHtmlTitle\")}</h2>\n                </div>\n                <div className=\"col-md-4 subtitle\">\n                    <span className=\"subtitle\">\n                        <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                    </span>\n                </div>\n            </div>\n            <form action={url.accountUrl} className=\"form-horizontal mt-3\" method=\"post\">\n                <nav>\n                <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <a className=\"nav-item nav-link active\" id=\"nav-tab1-tab\" data-bs-toggle=\"tab\" href=\"#nav-tab1\" role=\"tab\" aria-controls=\"nav-tab1\" aria-selected=\"true\">{msg(\"personalInfoHtmlTitle\")}</a>\n                    <a className=\"nav-item nav-link\" id=\"nav-tab2-tab\" data-bs-toggle=\"tab\" href=\"#nav-tab2\" role=\"tab\" aria-controls=\"nav-tab2\" aria-selected=\"false\">{msg(\"profileScopeConsentText\")}</a>\n                  </div>\n                </nav>\n                <div className=\"tab-content pt-5\" id=\"nav-tabContent\">\n                  <div className=\"tab-pane p-0 fade show active\" id=\"nav-tab1\" role=\"tabpanel\" aria-labelledby=\"nav-tab1-tab\">\n\n                    <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n\n                    {!realm.registrationEmailAsUsername && (\n                        <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"username\", \"has-error\"))}>\n                            <div className=\"form-group\">\n                                <label className=\"active control-label\" htmlFor=\"username\">{msg(\"username\")}</label>\n                                {realm.editUsernameAllowed && <span className=\"required\">*</span>}\n                                <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        disabled={!realm.editUsernameAllowed}\n                                        defaultValue={account.username ?? \"\"}\n                                />\n                            </div>\n                        </div>\n                    )}\n                    <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"email\", \"has-error\"))}>\n                        <label className=\"active control-label\" htmlFor=\"email\">{msg(\"email\")}</label>\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" defaultValue={account.email ?? \"\"} />\n                    </div>\n                    <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"lastName\", \"has-error\"))}>\n                        <label className=\"active control-label\" htmlFor=\"firstName\">{msg(\"firstName\")}</label>\n                        <input type=\"text\" className=\"form-control\" id=\"firstName\" name=\"firstName\" defaultValue={account.firstName ?? \"\"} />\n                    </div>\n                    <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"lastName\", \"has-error\"))}>\n                        <label className=\"active control-label\" htmlFor=\"lastName\">{msg(\"lastName\")}</label>\n                        <input type=\"text\" className=\"form-control\" id=\"lastName\" name=\"lastName\" defaultValue={account.lastName ?? \"\"} />\n                    </div>\n\n                  </div>\n                  <div className=\"tab-pane p-0 fade\" id=\"nav-tab2\" role=\"tabpanel\" aria-labelledby=\"nav-tab2-tab\">\n                    <BuildForm props={props}></BuildForm>\n                  </div>\n                </div>\n\n                <div className=\"form-group d-flex justify-content-end\">\n                    <div id=\"kc-form-buttons\" className=\"col-md-offset-2 col-md-10 submit\">\n                        <div className=\"d-flex justify-content-end align-items-center\">\n                            {referrer !== undefined && <a className=\"m-3\" href={referrer?.url}>{msg(\"backToApplication\")}</a>}\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonDefaultClass\"),\n                                    getClassName(\"kcButtonLargeClass\"),\n                                    \"m-3\"\n                                )}\n                                name=\"submitAction\"\n                                value=\"Cancel\"\n                            >\n                                {msg(\"doCancel\")}\n                            </button>\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonLargeClass\"),\n                                    \"m-3\"\n                                )}\n                                name=\"submitAction\"\n                                value=\"Save\"\n                            >\n                                {msg(\"doSave\")}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["UserInfo","props","getInfo","token","res","resJson","e","useContext","AuthContext","userData","setUserData","useState","userDataValues","setUserDataValue","useEffect","response","userProfileMetadata","error","jsx","Fragment","element","index","jsxs","BuildForm","wellKnown","setWellKnown","contentLoaded","setContentLoaded","authConfig","event","AuthProvider","Account","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","clsx","url","realm","messagesPerField","stateChecker","account","referrer","msg"],"mappings":"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"}