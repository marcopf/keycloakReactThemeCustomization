{"version":3,"file":"Applications-BbUjMQWC.js","sources":["../../src/keycloak-theme/account/pages/Applications.tsx"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nfunction isArrayWithEmptyObject(variable: any): boolean {\n    return Array.isArray(variable) && variable.length === 1 && typeof variable[0] === \"object\" && Object.keys(variable[0]).length === 0;\n}\n\nexport default function Applications(props: PageProps<Extract<KcContext, { pageId: \"applications.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, classes, Template } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {\n        url,\n        applications: { applications },\n        stateChecker\n    } = kcContext;\n\n    const { msg, advancedMsg } = i18n;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"applications\">\n            <div className=\"row\">\n                <div className=\"col-md-10\">\n                    <h2>{msg(\"applicationsHtmlTitle\")}</h2>\n                </div>\n\n                <form action={url.applicationsUrl} method=\"post\">\n                    <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n                    <input type=\"hidden\" id=\"referrer\" name=\"referrer\" value={stateChecker} />\n\n                    <table className=\"table table-striped table-dark\">\n                        <thead>\n                            <tr>\n                                <td scope=\"col\">{msg(\"application\")}</td>\n                                <td scope=\"col\">{msg(\"availableRoles\")}</td>\n                                <td scope=\"col\">{msg(\"grantedPermissions\")}</td>\n                                <td scope=\"col\">{msg(\"additionalGrants\")}</td>\n                                <td scope=\"col\">{msg(\"action\")}</td>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {applications.map(application => (\n                                <tr key={application.client.clientId}>\n                                    <td>\n                                        {application.effectiveUrl && (\n                                            <a href={application.effectiveUrl}>\n                                                {(application.client.name && advancedMsg(application.client.name)) || application.client.clientId}\n                                            </a>\n                                        )}\n                                        {!application.effectiveUrl &&\n                                            ((application.client.name && advancedMsg(application.client.name)) || application.client.clientId)}\n                                    </td>\n\n                                    <td>\n                                        {!isArrayWithEmptyObject(application.realmRolesAvailable) &&\n                                            application.realmRolesAvailable.map(role => (\n                                                <span key={role.name}>\n                                                    {role.description ? advancedMsg(role.description) : advancedMsg(role.name)}\n                                                    {role !== application.realmRolesAvailable[application.realmRolesAvailable.length - 1] && \", \"}\n                                                </span>\n                                            ))}\n                                        {!isArrayWithEmptyObject(application.realmRolesAvailable) && application.resourceRolesAvailable && \", \"}\n                                        {application.resourceRolesAvailable &&\n                                            Object.keys(application.resourceRolesAvailable).map(resource => (\n                                                <span key={resource}>\n                                                    {!isArrayWithEmptyObject(application.realmRolesAvailable) && \", \"}\n                                                    {application.resourceRolesAvailable[resource].map(clientRole => (\n                                                        <span key={clientRole.roleName}>\n                                                            {clientRole.roleDescription\n                                                                ? advancedMsg(clientRole.roleDescription)\n                                                                : advancedMsg(clientRole.roleName)}{\" \"}\n                                                            {msg(\"inResource\")}{\" \"}\n                                                            <strong>\n                                                                {clientRole.clientName ? advancedMsg(clientRole.clientName) : clientRole.clientId}\n                                                            </strong>\n                                                            {clientRole !==\n                                                                application.resourceRolesAvailable[resource][\n                                                                    application.resourceRolesAvailable[resource].length - 1\n                                                                ] && \", \"}\n                                                        </span>\n                                                    ))}\n                                                </span>\n                                            ))}\n                                    </td>\n\n                                    <td>\n                                        {application.client.consentRequired ? (\n                                            application.clientScopesGranted.map(claim => (\n                                                <span key={claim}>\n                                                    {advancedMsg(claim)}\n                                                    {claim !== application.clientScopesGranted[application.clientScopesGranted.length - 1] && \", \"}\n                                                </span>\n                                            ))\n                                        ) : (\n                                            <strong>{msg(\"fullAccess\")}</strong>\n                                        )}\n                                    </td>\n\n                                    <td>\n                                        {application.additionalGrants.map(grant => (\n                                            <span key={grant}>\n                                                {advancedMsg(grant)}\n                                                {grant !== application.additionalGrants[application.additionalGrants.length - 1] && \", \"}\n                                            </span>\n                                        ))}\n                                    </td>\n\n                                    <td>\n                                        {(application.client.consentRequired && application.clientScopesGranted.length > 0) ||\n                                        application.additionalGrants.length > 0 ? (\n                                            <button\n                                                type=\"submit\"\n                                                className={clsx(getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonClass\"))}\n                                                id={`revoke-${application.client.clientId}`}\n                                                name=\"clientId\"\n                                                value={application.client.id}\n                                            >\n                                                {msg(\"revoke\")}\n                                            </button>\n                                        ) : null}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        </Template>\n    );\n}\n"],"names":["isArrayWithEmptyObject","variable","Applications","props","kcContext","i18n","doUseDefaultCss","classes","Template","getClassName","useGetClassName","url","applications","stateChecker","msg","advancedMsg","jsx","jsxs","application","role","resource","clientRole","claim","grant","clsx"],"mappings":"4IAMA,SAASA,EAAuBC,EAAwB,CACpD,OAAO,MAAM,QAAQA,CAAQ,GAAKA,EAAS,SAAW,GAAK,OAAOA,EAAS,CAAC,GAAM,UAAY,OAAO,KAAKA,EAAS,CAAC,CAAC,EAAE,SAAW,CACtI,CAEA,SAAwBC,EAAaC,EAA4E,CAC7G,KAAM,CAAE,UAAAC,EAAW,KAAAC,EAAM,gBAAAC,EAAiB,QAAAC,EAAS,SAAAC,CAAa,EAAAL,EAE1D,CAAE,aAAAM,CAAa,EAAIC,EAAgB,CACrC,gBAAAJ,EACA,QAAAC,CAAA,CACH,EAEK,CACF,IAAAI,EACA,aAAc,CAAE,aAAAC,CAAa,EAC7B,aAAAC,CACA,EAAAT,EAEE,CAAE,IAAAU,EAAK,YAAAC,CAAgB,EAAAV,EAE7B,OACKW,EAAAA,IAAAR,EAAA,CAAe,UAAAJ,EAAW,KAAAC,EAAM,gBAAAC,EAAiB,QAAAC,EAAW,OAAO,eAChE,SAACU,EAAA,KAAA,MAAA,CAAI,UAAU,MACX,SAAA,CAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,YACX,SAAAA,EAAAA,IAAC,MAAI,SAAIF,EAAA,uBAAuB,EAAE,CACtC,CAAA,SAEC,OAAK,CAAA,OAAQH,EAAI,gBAAiB,OAAO,OACtC,SAAA,CAACK,EAAAA,IAAA,QAAA,CAAM,KAAK,SAAS,GAAG,eAAe,KAAK,eAAe,MAAOH,CAAc,CAAA,EAChFG,EAAAA,IAAC,SAAM,KAAK,SAAS,GAAG,WAAW,KAAK,WAAW,MAAOH,CAAc,CAAA,EAExEI,EAAAA,KAAC,QAAM,CAAA,UAAU,iCACb,SAAA,CAACD,EAAA,IAAA,QAAA,CACG,gBAAC,KACG,CAAA,SAAA,CAAAA,MAAC,KAAG,CAAA,MAAM,MAAO,SAAAF,EAAI,aAAa,EAAE,QACnC,KAAG,CAAA,MAAM,MAAO,SAAAA,EAAI,gBAAgB,EAAE,QACtC,KAAG,CAAA,MAAM,MAAO,SAAAA,EAAI,oBAAoB,EAAE,QAC1C,KAAG,CAAA,MAAM,MAAO,SAAAA,EAAI,kBAAkB,EAAE,QACxC,KAAG,CAAA,MAAM,MAAO,SAAAA,EAAI,QAAQ,EAAE,CAAA,CAAA,CACnC,CACJ,CAAA,QAEC,QACI,CAAA,SAAAF,EAAa,IAAIM,UACb,KACG,CAAA,SAAA,CAAAD,OAAC,KACI,CAAA,SAAA,CAAAC,EAAY,cACRF,EAAAA,IAAA,IAAA,CAAE,KAAME,EAAY,aACf,SAAYA,EAAA,OAAO,MAAQH,EAAYG,EAAY,OAAO,IAAI,GAAMA,EAAY,OAAO,SAC7F,EAEH,CAACA,EAAY,eACRA,EAAY,OAAO,MAAQH,EAAYG,EAAY,OAAO,IAAI,GAAMA,EAAY,OAAO,SAAA,EACjG,SAEC,KACI,CAAA,SAAA,CAAC,CAAAlB,EAAuBkB,EAAY,mBAAmB,GACpDA,EAAY,oBAAoB,IAC5BC,GAAAF,EAAAA,KAAC,OACI,CAAA,SAAA,CAAAE,EAAK,YAAcJ,EAAYI,EAAK,WAAW,EAAIJ,EAAYI,EAAK,IAAI,EACxEA,IAASD,EAAY,oBAAoBA,EAAY,oBAAoB,OAAS,CAAC,GAAK,IAAA,GAFlFC,EAAK,IAGhB,CACH,EACJ,CAACnB,EAAuBkB,EAAY,mBAAmB,GAAKA,EAAY,wBAA0B,KAClGA,EAAY,wBACT,OAAO,KAAKA,EAAY,sBAAsB,EAAE,IAC5CE,GAAAH,EAAAA,KAAC,OACI,CAAA,SAAA,CAAC,CAAAjB,EAAuBkB,EAAY,mBAAmB,GAAK,KAC5DA,EAAY,uBAAuBE,CAAQ,EAAE,IAAIC,UAC7C,OACI,CAAA,SAAA,CAAAA,EAAW,gBACNN,EAAYM,EAAW,eAAe,EACtCN,EAAYM,EAAW,QAAQ,EAAG,IACvCP,EAAI,YAAY,EAAG,IACpBE,EAAAA,IAAC,UACI,SAAWK,EAAA,WAAaN,EAAYM,EAAW,UAAU,EAAIA,EAAW,QAC7E,CAAA,EACCA,IACGH,EAAY,uBAAuBE,CAAQ,EACvCF,EAAY,uBAAuBE,CAAQ,EAAE,OAAS,CAC1D,GAAK,IAAA,GAXFC,EAAW,QAYtB,CACH,CAAA,CAAA,EAhBMD,CAiBX,CACH,CAAA,EACT,EAEAJ,EAAA,IAAC,KACI,CAAA,SAAAE,EAAY,OAAO,gBAChBA,EAAY,oBAAoB,IAC5BI,GAAAL,EAAA,KAAC,OACI,CAAA,SAAA,CAAAF,EAAYO,CAAK,EACjBA,IAAUJ,EAAY,oBAAoBA,EAAY,oBAAoB,OAAS,CAAC,GAAK,IAFnF,CAAA,EAAAI,CAGX,CACH,EAEDN,EAAAA,IAAC,UAAQ,SAAIF,EAAA,YAAY,CAAE,CAAA,EAEnC,QAEC,KACI,CAAA,SAAAI,EAAY,iBAAiB,IAAIK,UAC7B,OACI,CAAA,SAAA,CAAAR,EAAYQ,CAAK,EACjBA,IAAUL,EAAY,iBAAiBA,EAAY,iBAAiB,OAAS,CAAC,GAAK,IAAA,GAF7EK,CAGX,CACH,EACL,EAECP,EAAA,IAAA,KAAA,CACK,SAAYE,EAAA,OAAO,iBAAmBA,EAAY,oBAAoB,OAAS,GACjFA,EAAY,iBAAiB,OAAS,EAClCF,EAAA,IAAC,SAAA,CACG,KAAK,SACL,UAAWQ,EAAKf,EAAa,sBAAsB,EAAGA,EAAa,eAAe,CAAC,EACnF,GAAI,UAAUS,EAAY,OAAO,QAAQ,GACzC,KAAK,WACL,MAAOA,EAAY,OAAO,GAEzB,WAAI,QAAQ,CAAA,GAEjB,IACR,CAAA,CAAA,CAAA,EA9EKA,EAAY,OAAO,QA+E5B,CACH,CACL,CAAA,CAAA,EACJ,CAAA,EACJ,CAAA,CACJ,CAAA,CACJ,CAAA,CAER"}