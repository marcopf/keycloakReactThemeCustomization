"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDomRect = exports.domRectKeys = void 0;
var react_1 = require("react");
var evt_1 = require("evt");
var hooks_1 = require("evt/hooks");
var useStateRef_1 = require("./useStateRef");
var id_1 = require("tsafe/id");
var same_1 = require("evt/tools/inDepth/same");
//TODO: only re-renders when width or height change.
exports.domRectKeys = ["bottom", "right", "top", "left", "height", "width"];
function useDomRect(params) {
    var ref = (function useClosure() {
        var _a;
        var internallyCreatedRef = (0, useStateRef_1.useStateRef)(null);
        return (_a = params === null || params === void 0 ? void 0 : params.ref) !== null && _a !== void 0 ? _a : internallyCreatedRef;
    })();
    var _a = __read((0, react_1.useState)({
        "bottom": 0,
        "right": 0,
        "top": 0,
        "left": 0,
        "height": 0,
        "width": 0
    }), 2), domRect = _a[0], setDomRect = _a[1];
    (0, hooks_1.useEvt)(function (ctx) {
        var element = ref.current;
        if (element === null) {
            return;
        }
        evt_1.Evt.from(ctx, ResizeObserver, element)
            .toStateful()
            .pipe(function () {
            var _a = element.getBoundingClientRect(), bottom = _a.bottom, right = _a.right, top = _a.top, left = _a.left, height = _a.height, width = _a.width;
            return [(0, id_1.id)({ bottom: bottom, right: right, top: top, left: left, height: height, width: width })];
        })
            .attach(function (domRect) { return setDomRect(function (currentDomRect) { return (0, same_1.same)(currentDomRect, domRect) ? currentDomRect : domRect; }); });
    }, [ref.current]);
    return { ref: ref, domRect: domRect };
}
exports.useDomRect = useDomRect;
//# sourceMappingURL=useDomRect.js.map