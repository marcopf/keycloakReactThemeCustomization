"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useBrowserFontSizeFactor = exports.getBrowserFontSizeFactor = void 0;
var hooks_1 = require("evt/hooks");
var react_1 = require("react");
var evt_1 = require("evt");
var memoizee_1 = __importDefault(require("memoizee"));
exports.getBrowserFontSizeFactor = (0, memoizee_1.default)(function () {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var rootElement = document.querySelector("html");
    var fontSize = rootElement.style.fontSize;
    rootElement.style.fontSize = "100%";
    var browserFontSizeFactor = parseInt(window.getComputedStyle(rootElement, null)
        .getPropertyValue("font-size")
        .replace(/px$/, "")) / 16;
    rootElement.style.fontSize = fontSize;
    return browserFontSizeFactor;
});
function useBrowserFontSizeFactor() {
    var _a = __read((0, react_1.useState)(function () { return (exports.getBrowserFontSizeFactor.clear(),
        (0, exports.getBrowserFontSizeFactor)()); }), 2), browserFontSizeFactor = _a[0], setBrowserFontSizeFactor = _a[1];
    (0, hooks_1.useEvt)(function (ctx) {
        return evt_1.Evt.from(ctx, window, "focus")
            .attach(function () {
            exports.getBrowserFontSizeFactor.clear();
            setBrowserFontSizeFactor((0, exports.getBrowserFontSizeFactor)());
        });
    }, []);
    return { browserFontSizeFactor: browserFontSizeFactor };
}
exports.useBrowserFontSizeFactor = useBrowserFontSizeFactor;
//# sourceMappingURL=useBrowserFontSizeFactor.js.map