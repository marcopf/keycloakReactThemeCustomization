"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateSearchBarUrl = exports.retrieveParamFromUrl = exports.retrieveAllParamStartingWithPrefixFromUrl = exports.addParamToUrl = void 0;
function addParamToUrl(params) {
    var url = params.url, name = params.name, value = params.value;
    var newUrl = url;
    var result = retrieveParamFromUrl({
        url: url,
        name: name
    });
    if (result.wasPresent) {
        newUrl = result.newUrl;
    }
    newUrl += "".concat(newUrl.includes("?") ? "&" : newUrl.endsWith("?") ? "" : "?").concat(name, "=").concat(encodeURIComponent(value));
    return { newUrl: newUrl };
}
exports.addParamToUrl = addParamToUrl;
function retrieveAllParamStartingWithPrefixFromUrl(params) {
    var url = params.url, prefix = params.prefix, doLeavePrefixInResults = params.doLeavePrefixInResults;
    var _a = __read(url.split("?"), 2), baseUrl = _a[0], _b = _a[1], locationSearch = _b === void 0 ? "" : _b;
    var values = {};
    var newLocationSearch = (function () {
        var newLocationSearch = locationSearch
            .replace(/^\?/, "")
            .split("&")
            .map(function (part) { return part.split("="); })
            .filter(function (_a) {
            var _b = __read(_a, 2), key = _b[0], value_i = _b[1];
            return !key.startsWith(prefix) ?
                true :
                (values[doLeavePrefixInResults ? key : key.substring(prefix.length)] = decodeURIComponent(value_i), false);
        })
            .map(function (entry) { return entry.join("="); })
            .join("&");
        newLocationSearch = newLocationSearch === "" ?
            "" : "?".concat(newLocationSearch);
        return { newLocationSearch: newLocationSearch };
    })().newLocationSearch;
    return {
        "newUrl": "".concat(baseUrl).concat(newLocationSearch),
        values: values
    };
}
exports.retrieveAllParamStartingWithPrefixFromUrl = retrieveAllParamStartingWithPrefixFromUrl;
function retrieveParamFromUrl(params) {
    var url = params.url, name = params.name;
    var _a = retrieveAllParamStartingWithPrefixFromUrl({
        url: url,
        "prefix": name,
        "doLeavePrefixInResults": true
    }), newUrl = _a.newUrl, values = _a.values;
    return name in values ?
        {
            "wasPresent": true,
            newUrl: newUrl,
            "value": values[name]
        } :
        {
            "wasPresent": false
        };
}
exports.retrieveParamFromUrl = retrieveParamFromUrl;
function updateSearchBarUrl(url) {
    window.history.replaceState("", "", url);
}
exports.updateSearchBarUrl = updateSearchBarUrl;
//# sourceMappingURL=urlSearchParams.js.map