"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRerenderOnChange = void 0;
var useObservable_1 = require("./useObservable");
var react_1 = require("react");
/**
 * Equivalent of https://docs.evt.land/api/react-hooks
 * */
function useRerenderOnChange($) {
    //NOTE: We use function in case the state is a function
    var _a = __read((0, react_1.useState)(function () { return $.current; }), 2), setCurrent = _a[1];
    (0, useObservable_1.useObservable)(function (_a) {
        var registerSubscription = _a.registerSubscription;
        var next = function (current) { return setCurrent(function () { return current; }); };
        next($.current);
        var subscription = $.subscribe(next);
        registerSubscription(subscription);
    }, [$]);
}
exports.useRerenderOnChange = useRerenderOnChange;
//# sourceMappingURL=useRerenderOnChange.js.map