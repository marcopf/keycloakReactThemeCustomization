"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useStickyTop = void 0;
var react_1 = require("react");
var assert_1 = require("tsafe/assert");
var useDomRect_1 = require("./useDomRect");
var getScrollableParent_1 = require("./getScrollableParent");
var useStateRef_1 = require("./useStateRef");
function useStickyTop(params) {
    var _a;
    var internallyCreatedRef = (0, useStateRef_1.useStateRef)(null);
    var ref = (_a = params === null || params === void 0 ? void 0 : params.ref) !== null && _a !== void 0 ? _a : internallyCreatedRef;
    var topSticky = (0, useDomRect_1.useDomRect)({ ref: ref }).domRect.top;
    var _b = __read((0, react_1.useState)(undefined), 2), top = _b[0], setTop = _b[1];
    (0, react_1.useEffect)(function () {
        /*
            if (top !== undefined) {
                return;
            }
            */
        if (topSticky === 0) {
            return;
        }
        var element = ref.current;
        (0, assert_1.assert)(element !== null);
        var topScrollable = (0, getScrollableParent_1.getScrollableParent)({
            "element": element,
            "doReturnElementIfScrollable": false
        }).getBoundingClientRect().top;
        setTop(topSticky - topScrollable);
    }, [topSticky]);
    return { top: top, ref: ref };
}
exports.useStickyTop = useStickyTop;
//# sourceMappingURL=useStickyTop.js.map